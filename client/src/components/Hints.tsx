import React, { useState } from 'react'
import { Button, Callout } from '@dataesr/react-dsfr'
import { challengeNameType } from '../challenges';
import { HINTS } from '../constants'
import { storage } from '../services';

export { Hints }


function Hints(props: { challengeName: challengeNameType }) {
    const [revealedHints, setRevealedHints] = useState(storage.hints.getHintIndex(props.challengeName));
    const hints = HINTS[props.challengeName] || [];
    return <Callout>
        <Button onClick={revealMoreHints}>Révéler un indice ({revealedHints}/{hints.length})</Button>
        <ul>
            {hints.filter((_, index) => index < revealedHints).map((hint, index) => <li key={props.challengeName + "-" + index}>{hint}</li>)}
        </ul>
    </Callout>

    function revealMoreHints() {
        if (revealedHints < hints.length) {
            updateHints(revealedHints + 1)
        }
    }

    function updateHints(hintIndex: number) {
        setRevealedHints(hintIndex)
        storage.hints.setHintIndex(props.challengeName, hintIndex)
    }
}