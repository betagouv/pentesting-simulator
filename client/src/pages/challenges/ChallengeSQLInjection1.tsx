import React, { ChangeEvent, FormEvent, useState } from "react"
import { Button, Card, CardDescription, CardTitle, Col, Row, TextInput } from "@dataesr/react-dsfr";
import { Challenge } from "../../components";
import { getTransfersById } from "../../api";
import { environment } from "../../environment";

export { ChallengeSQLInjection1 }


function ChallengeSQLInjection1() {
    const [urlParameter, setUrlParameter] = useState<string>("");
    const [apiResult, setApiResult] = useState<string>("");

    return <Challenge challengeName="challengeSQLInjection1">
        <Row>
            <p>Pour ce défi, il s'agit de récupérer le <em>code</em> associé au virement réalisé par <strong>Laureline</strong> d'un montant de <strong>652</strong> euros.</p>
            <p>Ce formulaire permet d'envoyer au serveur un nombre entier : le serveur vous renvoie alors la liste des virements dont l'id correspond.</p>
        </Row>
        <Row><form className="fr-col-12" onSubmit={onSubmit}><TextInput placeholder="Insérer un entier ici..." value={urlParameter} onChange={onChangeUrlParameter} /><Button submit onClick={onSubmit}>Soumettre</Button></form></Row>
        {apiResult && (<Col >
            <Row>
                <Card className="fr-col-12">
                    <CardTitle>
                        Requête envoyée au serveur
                    </CardTitle>
                    <CardDescription>
                        {renderRequest()}
                    </CardDescription>
                </Card>
            </Row>
            <Row>
                <Card className="fr-col-12">
                    <CardTitle>
                        Requête SQL exécutée sur le serveur
                    </CardTitle>
                    <CardDescription>
                        SELECT id, code FROM transfers WHERE id={urlParameter}
                    </CardDescription>
                </Card>
            </Row>
            <Row>
                <Card>
                    <CardTitle>
                        Retour de l'API
                    </CardTitle>
                    <CardDescription>
                        <pre>{apiResult}</pre>
                    </CardDescription>
                </Card>
            </Row></Col>)}
    </Challenge>

    function onChangeUrlParameter(e: ChangeEvent<HTMLInputElement>) {
        setUrlParameter(e.target.value);
    }

    function renderRequest() {
        return <p>GET : http://{environment.API_URL}/transfers/{urlParameter}</p>
    }

    async function onSubmit(event: FormEvent<HTMLFormElement>) {
        event.preventDefault()
        const { data, error } = await getTransfersById(urlParameter);
        if (data) {
            setApiResult(JSON.stringify(data));
        } else if (error) {
            setApiResult(error);
        }
    }
}
