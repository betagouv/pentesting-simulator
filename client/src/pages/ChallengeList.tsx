import React, { ChangeEvent, useState } from 'react';
import { Link } from 'react-router-dom';
import { submitFlag } from '../api';
import { challengeNameType, challenges } from '../challenges'
import { LogoutButton } from '../components';
import { storage } from '../services';

const INITIAL_FLAGS = challenges.reduce((acc, challenge) => ({ ...acc, [challenge.name]: "" }), {} as Record<challengeNameType, string>)

function ChallengeList() {
  const [flags, setFlags] = useState(INITIAL_FLAGS);
  return (
    <div>
      <header >
        Pentesting simulator
      </header>
      <h1>Défis</h1>
      <ul>
        {challenges.map(({ name, path }) => {
          const isFlagFound = storage.challenges.getIsFlagFound(name)
          return (
            <li key={name}>
              <Link to={path}>Accéder au {name}</Link> - <input disabled={isFlagFound} name={name} value={flags[name || ""]} onChange={buildOnChange(name)} />
              <button onClick={buildOnSubmitFlag(name)} disabled={isFlagFound}>Soumettre le drapeau</button>
              {isFlagFound && <span> - Ce drapeau a été trouvé !</span>}
            </li>)
        })}
      </ul>
      <footer><LogoutButton /></footer>
    </div>
  );

  function buildOnChange(challengeName: challengeNameType) {
    return (e: ChangeEvent<HTMLInputElement>) => {
      const value = e.target.value;
      changeChallengeName(challengeName, value);
    }
  }

  function changeChallengeName(challengeName: challengeNameType, value: string) {
    setFlags({ ...flags, [challengeName]: value })

  }

  function buildOnSubmitFlag(challengeName: challengeNameType) {
    return async () => {
      const response = await submitFlag(challengeName, flags[challengeName])
      changeChallengeName(challengeName, "")
      storage.challenges.setIsFlagFound(challengeName, !!response.data)
      alert(!!response.data ? "Félicitations !" : "Mauvais drapeau... Essayez encore !");

    }
  }
}

export { ChallengeList };
