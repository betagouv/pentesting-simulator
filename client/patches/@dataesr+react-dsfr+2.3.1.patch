diff --git a/node_modules/@dataesr/react-dsfr/dist/index.d.ts b/node_modules/@dataesr/react-dsfr/dist/index.d.ts
index feaf3a9..c7d0209 100644
--- a/node_modules/@dataesr/react-dsfr/dist/index.d.ts
+++ b/node_modules/@dataesr/react-dsfr/dist/index.d.ts
@@ -41,7 +41,7 @@ interface AccordionItemProps {
      * @ignore
      */
     initExpand?: boolean;
-    onClick?: (...args: any[])=>any;
+    onClick?: (...args: any[]) => any;
     /**
      * @ignore
      */
@@ -76,7 +76,7 @@ interface AlertProps {
     role?: string;
     show?: boolean;
     closable?: boolean;
-    onClose?: (...args: any[])=>any;
+    onClose?: (...args: any[]) => any;
     className?: AlertClassName;
 }
 
@@ -152,7 +152,7 @@ interface ButtonProps {
     hasBorder?: boolean;
     icon?: string;
     disabled?: boolean;
-    onClick?: (...args: any[])=>any;
+    onClick?: (...args: any[]) => any;
     iconPosition?: ButtonIconPosition;
     title?: string;
     styleAsLink?: boolean;
@@ -289,7 +289,7 @@ declare const CardDescription: React.FC<CardDescriptionProps>;
 
 type CardDetailChildren = string | React.ReactNode;
 
-type CardDetailPosition = 'top'| 'bottom';
+type CardDetailPosition = 'top' | 'bottom';
 type CardDetailClassName = string | Object | any[];
 
 interface CardDetailProps {
@@ -334,7 +334,7 @@ interface CardTitleProps {
     className?: CardTitleClassName;
     as?: CardTitleAs;
     asLink?: React.ReactElement<any>;
-    onClick?: (...args: any[])=>any;
+    onClick?: (...args: any[]) => any;
     ariaLabel?: string;
 }
 
@@ -426,11 +426,11 @@ interface ConsentBannerBannerButtons {
 
 interface ConsentBannerProps {
     className?: ConsentBannerClassName;
-    openConsentModal: (...args: any[])=>any;
+    openConsentModal: (...args: any[]) => any;
     title?: string;
     description: string;
-    refuseBannerButton: (...args: any[])=>any;
-    acceptBannerButton: (...args: any[])=>any;
+    refuseBannerButton: (...args: any[]) => any;
+    acceptBannerButton: (...args: any[]) => any;
     bannerButtons: ConsentBannerBannerButtons;
 }
 
@@ -461,10 +461,10 @@ interface ConsentManagerProps {
     modalCloseLabel: string;
     modalCloseTitle: string;
     bannerTitle?: string;
-    setIsModalOpen: (...args: any[])=>any;
-    confirmConsent: (...args: any[])=>any;
-    refuseBannerButton: (...args: any[])=>any;
-    acceptBannerButton: (...args: any[])=>any;
+    setIsModalOpen: (...args: any[]) => any;
+    confirmConsent: (...args: any[]) => any;
+    refuseBannerButton: (...args: any[]) => any;
+    acceptBannerButton: (...args: any[]) => any;
     bannerButtons: ConsentManagerBannerButtons;
 }
 
@@ -491,7 +491,7 @@ interface FileProps {
     className?: FileClassName;
     label: string;
     multiple?: boolean;
-    onChange?: (...args: any[])=>any;
+    onChange?: (...args: any[]) => any;
     errorMessage?: string;
     hint?: string;
 }
@@ -567,7 +567,7 @@ interface FooterLinkProps {
     __TYPE?: any;
     children: FooterLinkChildren;
     href?: string;
-    onClick?: (...args: any[])=>any;
+    onClick?: (...args: any[]) => any;
     section?: FooterLinkSection;
     className?: FooterLinkClassName;
     asLink?: React.ReactElement<any>;
@@ -819,7 +819,7 @@ interface ToolItemProps {
     as?: ToolItemAs;
     children: ToolItemChildren;
     link?: string;
-    onClick?: (...args: any[])=>any;
+    onClick?: (...args: any[]) => any;
     asLink?: React.ReactElement<any>;
     target?: string;
 }
@@ -883,7 +883,7 @@ interface LinkProps {
     isSimple?: boolean;
     current?: boolean;
     icon?: string;
-    onClick?: (...args: any[])=>any;
+    onClick?: (...args: any[]) => any;
     iconPosition?: LinkIconPosition;
     iconSize?: LinkIconSize;
     /**
@@ -923,7 +923,7 @@ interface ModalProps {
     id?: string;
     isOpen?: boolean;
     children: ModalChildren;
-    hide: (...args: any[])=>any;
+    hide: (...args: any[]) => any;
     size?: ModalSize;
     className?: ModalClassName;
     canClose?: boolean;
@@ -942,7 +942,7 @@ interface ModalCloseProps {
     /**
      * @ignore
      */
-    hide?: (...args: any[])=>any;
+    hide?: (...args: any[]) => any;
     className?: ModalCloseClassName;
 }
 
@@ -990,7 +990,7 @@ type PaginationAnchorAs = "a" | any;
 interface PaginationButtonLabels {
     navigationAria?: string;
     currentAria?: string;
-    pageAria?: (...args: any[])=>any;
+    pageAria?: (...args: any[]) => any;
     prevLabel?: string;
     nextLabel?: string;
     prevAria?: string;
@@ -1016,8 +1016,8 @@ type PaginationItemAnchorAs = "a" | any;
 interface PaginationItemProps {
     page: number;
     isActive?: boolean;
-    buildURL?: (...args: any[])=>any;
-    onClick?: (...args: any[])=>any;
+    buildURL?: (...args: any[]) => any;
+    onClick?: (...args: any[]) => any;
     aria?: string;
     anchorAs?: PaginationItemAnchorAs;
 }
@@ -1044,8 +1044,8 @@ interface RadioProps {
     label: string;
     message?: string;
     messageType?: RadioMessageType;
-    onChange?: (...args: any[])=>any;
-    onGroupChange?: (...args: any[])=>any;
+    onChange?: (...args: any[]) => any;
+    onGroupChange?: (...args: any[]) => any;
     size?: RadioSize;
     imageURL?: string;
     value: string;
@@ -1074,7 +1074,7 @@ interface RadioGroupProps {
     messageType?: RadioGroupMessageType;
     name?: string;
     value?: string;
-    onChange?: (...args: any[])=>any;
+    onChange?: (...args: any[]) => any;
     required?: boolean;
 }
 
@@ -1091,7 +1091,7 @@ interface SearchBarProps {
     /**
      * A function that handles search action. Input value is passed as prop.
      */
-    onSearch: (...args: any[])=>any;
+    onSearch: (...args: any[]) => any;
     size?: SearchBarSize;
     defaultValue?: string;
     className?: SearchBarClassName;
@@ -1121,15 +1121,15 @@ interface SearchableSelectProps {
     message?: string;
     messageType?: SearchableSelectMessageType;
     name?: string;
-    onChange?: (...args: any[])=>any;
-    onTextChange?: (...args: any[])=>any;
-    onBlur?: (...args: any[])=>any;
-    onFocus?: (...args: any[])=>any;
-    onKeyDown?: (...args: any[])=>any;
+    onChange?: (...args: any[]) => any;
+    onTextChange?: (...args: any[]) => any;
+    onBlur?: (...args: any[]) => any;
+    onFocus?: (...args: any[]) => any;
+    onKeyDown?: (...args: any[]) => any;
     options: SearchableSelectOptions[];
     selected?: string;
     required?: boolean;
-    filter?: (...args: any[])=>any;
+    filter?: (...args: any[]) => any;
 }
 
 declare const SearchableSelect: React.FC<SearchableSelectProps>;
@@ -1209,7 +1209,7 @@ interface SideMenuLinkProps {
     href?: string;
     className?: SideMenuLinkClassName;
     asLink?: React.ReactElement<any>;
-    onClick?: (...args: any[])=>any;
+    onClick?: (...args: any[]) => any;
 }
 
 declare const SideMenuLink: React.FC<SideMenuLinkProps>;
@@ -1266,7 +1266,7 @@ interface SwitchThemeProps {
     darkLabel?: string;
     lightLabel?: string;
     isOpen: boolean;
-    setIsOpen: (...args: any[])=>any;
+    setIsOpen: (...args: any[]) => any;
 }
 
 declare const SwitchTheme: React.FC<SwitchThemeProps>;
@@ -1289,7 +1289,7 @@ declare const SimpleTable: React.FC<SimpleTableProps>;
 
 type TableCaptionPosition = "top" | "bottom" | "none";
 
-type TableRowKey = string | ((...args: any[])=>any);
+type TableRowKey = string | ((...args: any[]) => any);
 
 type TableClassName = string | Object | any[];
 
@@ -1313,7 +1313,7 @@ interface TableProps {
     surrendingPages?: number;
     perPage?: number;
     page?: number;
-    setPage?: (...args: any[])=>any;
+    setPage?: (...args: any[]) => any;
 }
 
 declare const Table: React.FC<TableProps>;
@@ -1336,8 +1336,8 @@ type TabButtonClassName = string | Object | any[];
 
 interface TabButtonProps {
     className?: TabButtonClassName;
-    onClickTab: (...args: any[])=>any;
-    onKeyDownTab: (...args: any[])=>any;
+    onClickTab: (...args: any[]) => any;
+    onKeyDownTab: (...args: any[]) => any;
     label: string;
     icon?: string;
     index: number;
@@ -1377,7 +1377,7 @@ interface TagProps {
     title?: string;
     target?: string;
     icon?: string;
-    onClick?: (...args: any[])=>any;
+    onClick?: (...args: any[]) => any;
     iconPosition?: TagIconPosition;
 }
 
@@ -1400,7 +1400,7 @@ type TextInputType = "text" | "date" | "number" | "email" | "password";
 
 type TextInputClassName = string | Object | any[];
 
-interface TextInputProps {
+interface TextInputProps extends React.InputHTMLAttributes<HTMLInputElement> {
     textarea?: boolean;
     type?: TextInputType;
     label?: string;
@@ -1410,7 +1410,7 @@ interface TextInputProps {
     required?: boolean;
     className?: TextInputClassName;
     withAutoValidation?: boolean;
-    onBlur?: (...args: any[])=>any;
+    onBlur?: (...args: any[]) => any;
 }
 
 declare const TextInput: React.FC<TextInputProps>;
@@ -1432,7 +1432,7 @@ interface TileProps {
      * One of: node, arrayOf(node), string
      */
     children: TileChildren;
-    onClick?: (...args: any[])=>any;
+    onClick?: (...args: any[]) => any;
     ariaLabel?: string;
 }
 
@@ -1478,7 +1478,7 @@ declare const TileImage: React.FC<TileImageProps>;
 type ToggleClassName = string | Object | any[];
 
 interface ToggleProps {
-    onChange?: (...args: any[])=>any;
+    onChange?: (...args: any[]) => any;
     id?: string;
     className?: ToggleClassName;
     hasSeparator?: boolean;
@@ -1611,7 +1611,7 @@ interface MediaVideoProps {
     children: React.ReactNode;
     className?: MediaVideoClassName;
     legend?: string;
-    onTranscriptionClick?: (...args: any[])=>any;
+    onTranscriptionClick?: (...args: any[]) => any;
     ratio?: MediaVideoRatio;
     size?: MediaVideoSize;
 }
